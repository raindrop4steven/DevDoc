## 音频格式

### 文件格式和数据格式

首先我们要知道的是，对每个音频文件有两部分：1是文件格式（也叫音频容器），2是数据格式（也叫音频编码）。

**文件格式（或者是音频容器）** 描述了这个文件它自己的格式。它里面的实际音频数据能使用很多不同的方式编码。例如，一个后缀为caf的文件是一种文件格式，它能够包含用MP3、线性pcm（lpcm）和其他许多格式编码的音频数据。


**数据格式（或者是音频编码）**

我们接下来将要开始了解音频编码，而不是文件格式，因为音频编码才是最重要的。

以下是iphone支持的的音频数据编码格式和针对每个的描述：

-  AAC：aac其实是“高级音频编码（advanced audio coding）”的缩写，它是被设计用来取代MP3格式的。你可能会想，它压缩了原始的声音，导致容量占用少但是质量肯定会有所下降。不过这些质量的损失取决于声音比特率的大小，当比特率合适的时候，这些损失人耳是很难听出来的。事实上，aac比mp3有更好的压缩率，特别是在比特率低于128bit/s的时候。

- HE-AAC：HE-AAC是AAC的一个超集，这个“HE”代表的是“High efficiency”。 HE-AAC是专门为低比特率所优化的一种音频编码格式，比如streaming audio就特别适合使用这种编码格式。

- AMR：AMR全称是“Adaptive Multi-Rate”，它也是另一个专门为“说话（speech）”所优化的编码格式，也是适合低比特率环境下采用。

- ALAC：它全称是“Apple Lossless”，这是一种没有任何质量损失的音频编码方式，也就是我们说的无损压缩。在实际使用过程中，它能够压缩40%-60%的原始数据。这种编码格式的解码速度非常快，这对iphone或者ipod这种小型设备来说非常适合。

- iLBC: 这是另一种专门为说话所设计的音频编码格式，它非常适合于IP电话等其它需要流式音频的场合。

- IMA4： 这是一个在16-bit音频文件下按照4：1的压缩比来进行压缩的格式。这是iphone上面一种非常重要的编码格式，我们将在以后讨论原因。

- Linear PCM：它的中文意思是基于线性脉冲编码调制，用于将模拟声音数据转换成数字声音数据。简而言之，就是意味着无压缩数据。由于数据是非压缩的，它可以非常快的播放，并且当空间不是问题时，这是在iphone上面首选的音频编码方式。

- μ-law and a-law： 就我所知道的，这种编码是交替的编码模拟数据为数字格式数据，但是在speech优化方面比linear PCM更好。

- MP3： 这种格式是我们都知道也喜欢的，虽然很多年过去了，但MP3到目前为止仍然是一种非常流行的编码格式，它也能被iphone很好地支持。

#### 我们到底选择什么编码格式？

上面的看起来是张很大的表，但是实际上只有一些是我们做开发时首选的。在具体做选择的时候，你必须记住以下几点：

- 你可以播放linear PCM， IMA4和一些其它没有压缩的或者简单压缩的音频格式，这些格式可以很好地被iphone的硬件解码。

- 对于更多高级的压缩格式，例如AAC，MP3，和ALAC，iphone并没有提供硬件编解码器的支持来很快解压缩这些数据，并且在一个时候只能处理一个文件。因此，假如你播放超过一个使用这些编码的音频文件，系统将选择使用软件来解码，那样会比较慢，还会占用CPU。

因此选择什么样的数据格式，这里有两条建议：

- 假如空间不是问题，那么使用linear PCM来编码每个音频。这样不仅使你的音频最快地播放，而且你能够在不占用CPU资源的情况下同时播放多个声音。

- 假如空间是问题，你大多数时候要使用AAC来编码你的背景音乐和IMA4来编码你的音效。

Linear PCM的许多变种

还有一个很重要的关于linear PCM的问题需要强调，那就是这种无压缩的数据格式是iphone上面编程首选的。针对不同的数据存储，这里有一些linear PCM变种。这些数据可以使用高尾数或者低尾数格式来储存，它们之间的差别，就像浮点型和整型它们占用的位宽不同。

这里最重要的一件事就是，在iphone上面首选的linear PCM是低尾数（little-endian）格式的16位整型，或者是”LEI16″(好像是一种编码格式，apple caf audio format code： LEI16, ios设备的音频格式是16位低尾数编码)。这个是和Mac os x不一样的，它使用的是本地32位浮点型尾数编码。因为音频文件经常要在Mac上面创建，所以检查文件并把他们转换为iphone首选的音频编码格式是个很好的主意。

文件格式（或者说是音频容器）

iphone支持很多文件格式，包括MPEG-1 (.mp3), MPEG-2 ADTS (.aac), AIFF, CAF, and WAVE。但是最重要的事是你可以只使用CAF，因为它能包含任何iphone支持的编码格式的数据，在iPhone上面它是推荐的文件格式。

（译者：在这里我在啰嗦点，其实文件格式就像是桶一样，里面可以装很多水，那些水就是那些音频数据。桶有很多种，也就是有很多种文件格式，而且不一样的桶，也需要装不同的水。CAF这种桶就可以装各种各样的水，不过有些就只能装几种类型的水。希望我这样的比喻你可以很好的理解。）

比特率

这有一个有关音频编码很重要的术语，我们接下来会提及：比特率。

比特率是音频文件每秒占据的字节数（比特数）。一些像AAC或者MP3编码会指定音频文件压缩的比特数。当你在使用比较低的比特率时，你将会丢失声音质量。

你应该根据特定的声音文件的不同来选择不同的比特率，试着使用不同的比特率，来比较哪个是最合适的，在声音文件大小和声音质量之间做一些权衡。假如你的文件大多数是语音说话数据，你可以使用比较低的比特率。

这里有一个表，给你一个最常见的比特率的概述：

-  32kbit/s: 调幅（AM）广播的质量

-  48kbit/s: 一般比较长时间的语音播客的比特率

-  64kbit/s: 一般正常长度的语音播客的比特率

- 96kbit/s: 调频（FM）广播的质量

- 128kbit/s: 大多数MP3音乐的比特率

-  160kbit/s: 那些很喜欢音乐的，想要听觉感受的人更喜欢的在128kbit/s之上的一个比特率

- 192kbit/s: 数字电台的质量

- 320kbit/s: 在这个比特率下人们几乎和CD的播放效果一样，不能区别

-  500kbit/s-1,411kbit/s: 无损的音频编码，就像linear PCM

#### 采样率

在我们继续介绍音频之前，这里还有一个术语我们需要了解一下，就是：采样率。

当转换一个模拟信号到数字格式，采样率表示多久抽取一次声音波形试样来转换成一个数字信号。

大多情况下，44100Hz是被经常使用的，因为这和CD音频一样的采样率。

原文链接地址：http://www.raywenderlich.com/204/audio-101-for-iphone-developers-file-and-data-formats

现将各录音格式的解决方式总结如下：
mp3: ios,android录制都 需要进行编码转换，使用lame第三方库，播放应该都可以直接播放
iLBC：ios支持编码解码， android 低版本不支持，不过有开源第三方库，可以进行录制编码，播放解码的处理
Speex:也是开源的第三方库，声称文件小，能降噪，需要ios，android客户端都进行编码解码处理
amr:ios 4.3之前的版本支持，以后版本都不支持amr格式，android设备支持该格式,采用这种格式，ios设备可用libOpenCore第三方库进行转换,播放时再进行解码成原始pcm进行播放。android设备可直接录制与播放
aac：两系统应该都支持的格式，但有说android设备有支持的不够好。没做测试，具体情况未知。